# Workflow’s configuration metadata
[template variables]

################################################################################
# Environment
################################################################################

[template variables=SITE]
ns=Environment
title=Site
description=Which institution to load the site-specific configuration for.
help=The site-specific configuration should live in a file under site/
    For example the Met Office configuration lives under "site/metoffice.cylc".

    Localhost does not use any site-specific settings, and should work on any
    cylc installation. It will however run on the scheduler server.
values="localhost", "metoffice", "niwa"
value-titles=Localhost, Met Office, NIWA
compulsory=true
sort-key=aaa

[template variables=CSET_ENV_USE_MODULES]
ns=Environment
title=Use modules for environment
description=Use Linux modules to load the environment.
type=python_boolean
compulsory=true
trigger=template variables=MODULES_PURGE: True;
        template variables=MODULES_LIST: True;
sort-key=modules1

[template variables=MODULES_PURGE]
ns=Environment
title=Purge modules
description=Purge modules that are not explicitly specified.
help=Remove any modules that are loaded by default before loading the specified
    ones. This is recommended as it makes your workflows more explicit and less
    deendent on site-specific details, increasing portability.
type=python_boolean
sort-key=modules2

[template variables=MODULES_LIST]
ns=Environment
description=Modules to load.
type=spaced_list
length=:
sort-key=modules2

[template variables=CSET_ENV_USE_CONDA]
ns=Environment
title=Use conda for environment
description=Use a conda environment.
help=The conda environment is loaded after any modules.
type=python_boolean
compulsory=true
trigger=template variables=CONDA_VENV_LOCATION: True;
        template variables=CONDA_VENV_CREATE: True;
        template variables=CONDA_PATH: True;
sort-key=conda1

[template variables=CONDA_PATH]
ns=Environment
title=Conda executable path
description=Where to get conda from. Leave blank if conda already on path.
help=Path where the conda executable is. This should be to a directory, rather
    to a binary itself. Leave this field blank if conda comes from another
    source, such as modules or being already on path.
type=quoted
sort-key=conda2

[template variables=CONDA_VENV_CREATE]
ns=Environment
title=Create conda environment
description=Whether to (re)create the conda environment.
help=When enabled it will check that the conda environment exists and is
    up-to-date, recreating it otherwise.
type=python_boolean
sort-key=conda2

[template variables=CONDA_VENV_LOCATION]
ns=Environment
title=Conda environment location
description=Location of the conda virtual environment.
help=Existing environments can be found by running `conda info --envs` and
    copying the path displayed there. If unspecified it defaults to the workflow
    share directory.

    If creating the conda environment as part of the workflow, it will only be
    created if it does not exist or is out of date.
type=quoted
sort-key=conda2

[template variables=CSET_ENV_USE_LOCAL_CSET]
ns=Environment
title=Use local CSET
description=Whether to use a local version of CSET, rather than the bundled one.
help=Use a local version of CSET, rather than the version provided from conda.
    This is especially useful for running development versions.
type=python_boolean
compulsory=true
trigger=template variables=CSET_LOCAL_CSET_PATH: True;
sort-key=localcset1

[template variables=CSET_LOCAL_CSET_PATH]
ns=Environment
title=Local CSET path
description=Path to local copy of CSET.
help=Path to either a wheel file, or a checked out copy of the CSET git repo.
    For the repository, it should be the path to the directory containing the
    pyproject.toml file.
type=quoted
sort-key=localcset2

[template variables=CSET_ENV_SEPARATE_MET]
ns=Environment
description=Separately source MET, rather than using modules or conda.
type=python_boolean
trigger=template variables=MET_INSTALL_DIR: True;
        template variables=CONDA_METPLUS_VENV_LOCATION: True;
        template variables=METPLUS_BASE: True;
        template variables=MET_LIBRARIES: True;
compulsory=true
sort-key=met1

[template variables=CONDA_METPLUS_VENV_LOCATION]
ns=Environment
description=Location of the conda virtual environment needed by METplus.
type=quoted
sort-key=met2

[template variables=MET_INSTALL_DIR]
ns=Environment
description=Path where MET is installed to.
type=quoted
sort-key=met2

[template variables=METPLUS_BASE]
ns=Environment
description=Path where METplus is installed to.
type=quoted
sort-key=met2

[template variables=MET_LIBRARIES]
ns=Environment
description=Path to libraries needed by MET.
type=quoted
sort-key=met2


################################################################################
# General
################################################################################

[template variables=LOGLEVEL]
ns=General
title=Logging level
description=How detailed the logs should be.
help=INFO only shows a general overview of what is happening, while DEBUG
    enables in-operator logging, but produces a lot of output.
values="INFO", "DEBUG"
value-titles=Info, Debug
compulsory=true

[template variables=HOUSEKEEPING_MODE]
ns=General
title=Housekeeping mode
description=How much housekeeping deletes.
help=None will delete nothing.

    Debug will only delete the downloads of initial data, and will keep
    intermediate files.

    Standard deletes most intermediate files, save for the final data that is
    plotted.
values=0, 1, 2
value-titles=None, Debug, Standard
compulsory=true

[template variables=COLORBAR_FILE]
ns=General
description=Filepath and name for colorbar details of each variable i.e.
    name_of_filepath/name_of_filename. An example file is available under
    CSET/cset-workflow/extra-meta/colorbar_dict_alphabetical.json
help=TODO
type=quoted
compulsory=true

[template variables=PLOT_RESOLUTION]
ns=General
description=Resolution of output plot in dpi.
help=This is passed through to the plotting operators and sets the resolution
    of the output plots to the given number of pixels per inch. If unset
    defaults to 100 dpi. The plots are all 8 by 8 inches, so this corresponds
    to 800 by 800 pixels.
type=integer
compulsory=true

[template variables=WEB_DIR]
ns=General
description=Path to directory that is served by the webserver.
help=This will probably be under $HOME/public_html or similar. You will want to
    ensure a subfolder is used as multiple files will be written here.
type=quoted
compulsory=true
sort-key=web2

[template variables=WEB_ADDR]
ns=General
title=Website address
description=The address at which the website is served.
help=This should be the address where your public_html or equivalent is served.
    It might include a partial path, such as your username.

    E.g: https://example.com/~username/
type=quoted
compulsory=true
sort-key=web1

[template variables=WEB_DIR]
ns=General
title=Web directory
description=Path to directory that is served by the webserver.
help=This will probably be under $HOME/public_html or similar. You will want to
    ensure a subfolder is used as it will be replaced with a symbolic link.

    This is where the output of the workflow will be accessible from, through a
    symlink to the workflow shared directory. Anything existing at the path will
    be removed.

    E.g: $HOME/public_html/CSET
type=quoted
compulsory=true
sort-key=web2

[template variables=CSET_RUNAHEAD_LIMIT]
ns=General
title=Concurrent cycle limit
description=Number of simultaneous cycles.
help=The maximum number of cycles run in parallel. A larger number here will
    finish quicker, but utilise more compute resources at once. For a large
    enough workflow it may overwhelm the batch submission system, so it is
    recommended to keep this below 10.
type=integer
range=0:
compulsory=true


################################################################################
# Models and Cases
################################################################################

[template variables=CSET_CYCLING_MODE]
ns=Models and Cases
title=Cycling mode
description=Process case studies, or a continuous trial.
values="Case Study", "Trial"
trigger=template variables=CSET_CASE_DATES: "Case Study";
        template variables=CSET_TRIAL_START_DATE: "Trial";
        template variables=CSET_TRIAL_END_DATE: "Trial";
        template variables=CSET_TRIAL_CYCLE_PERIOD: "Trial";
compulsory=true
sort-key=a1

# Case study settings.
[template variables=CSET_CASE_DATES]
ns=Models and Cases
title=Case study dates
description=List of datetimes of cases.
help=This should be a python list of ISO 8601 datetime strings indicating the
    forecast initiation time (AKA data time) of the data. E.g. 2000-01-01T00:00Z
    Ensure that it is consistent with your data’s first validity time. If not
    then a warning that cubes can not be loaded is raised.
type=python_list
compulsory=true
sort-key=b1

# Trials settings.
[template variables=CSET_TRIAL_START_DATE]
ns=Models and Cases
title=Trial start date
description=Start date of the trial.
help=The start date of the trial, in ISO 8601 format. This is the first date
    that the workflow will run from. For example: 2000-01-01T00:00Z
type=quoted
compulsory=true
sort-key=c1

[template variables=CSET_TRIAL_END_DATE]
ns=Models and Cases
title=Trial end date
description=End date of the trial. If blank, the workflow will run indefinitely.
help=The end date of the trial, in ISO 8601 format. This is the last date that
    the workflow will run to. If blank, the workflow will run indefinitely.
    For example: 2000-01-01T00:00Z
type=quoted
compulsory=true
sort-key=c2

[template variables=CSET_TRIAL_CYCLE_PERIOD]
ns=Models and Cases
title=Trial cycle period
description=The period between model runs of the trial.
help=The cycle period of the trial, as an ISO 8601 duration. This is the time
    between each forecast initiation of the model. For example: PT48H
type=quoted
compulsory=true
sort-key=c3

[template variables=CSET_ANALYSIS_PERIOD]
ns=Models and Cases
title=Analysis period
description=The length of forecast to analyse, AKA forecast length.
help=The period over which to produce diagnostics for the forecast, in ISO 8601 duration format.
    For example: PT48H

    This controls how much data is fetched and fed into CSET for analysis.
type=quoted
compulsory=true
sort-key=d1

[template variables=CSET_ANALYSIS_OFFSET]
ns=Models and Cases
title=Analysis offset
description=Offset from forecast initiation to verification start.
help=The offset in time between the forecast initiation and the start of the
    analysis period. This is useful when needed fields are not output on the
    first time step. For example: PT1H
type=quoted
compulsory=true
sort-key=d2

[template variables=CSET_MODEL_COUNT]
ns=Models and Cases
title=Number of models
description=Number of models to evaluate.
help=The number of models to evaluate, between 1 and 10. If more models
    are needed, it is straightforward to change upon request.
type=integer
range=1:10
compulsory=true
sort-key=e1
# Need to link to all of the model settings here.
trigger=template variables=m01_name: this >= 1;
        template variables=m01_data_source: this >= 1;
        template variables=m01_data_path: this >= 1;
        template variables=m01_date_type: this >= 1;
        template variables=m01_data_period: this >= 1;
        template variables=m01_preprocessing: this >= 1;
        template variables=m01_preprocessing_recipe: this >= 1;

        template variables=m02_name: this >= 2;
        template variables=m02_data_source: this >= 2;
        template variables=m02_data_path: this >= 2;
        template variables=m02_date_type: this >= 2;
        template variables=m02_data_period: this >= 2;
        template variables=m02_preprocessing: this >= 2;
        template variables=m02_preprocessing_recipe: this >= 2;

        template variables=m03_name: this >= 3;
        template variables=m03_data_source: this >= 3;
        template variables=m03_data_path: this >= 3;
        template variables=m03_date_type: this >= 3;
        template variables=m03_data_period: this >= 3;
        template variables=m03_preprocessing: this >= 3;
        template variables=m03_preprocessing_recipe: this >= 3;

        template variables=m04_name: this >= 4;
        template variables=m04_data_source: this >= 4;
        template variables=m04_data_path: this >= 4;
        template variables=m04_date_type: this >= 4;
        template variables=m04_data_period: this >= 4;
        template variables=m04_preprocessing: this >= 4;
        template variables=m04_preprocessing_recipe: this >= 4;

        template variables=m05_name: this >= 5;
        template variables=m05_data_source: this >= 5;
        template variables=m05_data_path: this >= 5;
        template variables=m05_date_type: this >= 5;
        template variables=m05_data_period: this >= 5;
        template variables=m05_preprocessing: this >= 5;
        template variables=m05_preprocessing_recipe: this >= 5;

        template variables=m06_name: this >= 6;
        template variables=m06_data_source: this >= 6;
        template variables=m06_data_path: this >= 6;
        template variables=m06_date_type: this >= 6;
        template variables=m06_data_period: this >= 6;
        template variables=m06_preprocessing: this >= 6;
        template variables=m06_preprocessing_recipe: this >= 6;

        template variables=m07_name: this >= 7;
        template variables=m07_data_source: this >= 7;
        template variables=m07_data_path: this >= 7;
        template variables=m07_date_type: this >= 7;
        template variables=m07_data_period: this >= 7;
        template variables=m07_preprocessing: this >= 7;
        template variables=m07_preprocessing_recipe: this >= 7;

        template variables=m08_name: this >= 8;
        template variables=m08_data_source: this >= 8;
        template variables=m08_data_path: this >= 8;
        template variables=m08_date_type: this >= 8;
        template variables=m08_data_period: this >= 8;
        template variables=m08_preprocessing: this >= 8;
        template variables=m08_preprocessing_recipe: this >= 8;

        template variables=m09_name: this >= 9;
        template variables=m09_data_source: this >= 9;
        template variables=m09_data_path: this >= 9;
        template variables=m09_date_type: this >= 9;
        template variables=m09_data_period: this >= 9;
        template variables=m09_preprocessing: this >= 9;
        template variables=m09_preprocessing_recipe: this >= 9;

        template variables=m10_name: this >= 10;
        template variables=m10_data_source: this >= 10;
        template variables=m10_data_path: this >= 10;
        template variables=m10_date_type: this >= 10;
        template variables=m10_data_period: this >= 10;
        template variables=m10_preprocessing: this >= 10;
        template variables=m10_preprocessing_recipe: this >= 10;


################################################################################
# Model definitions. Repeat section for each desired model.
################################################################################

# [template variables=m??_name]
# ns=Models and Cases/Model ??
# title=Model name
# description=A friendly name for the model.
# help=A recognisable name for this particular model. This is carried through to
#      the output webpage, and identifies the model. As it is only used for
#      display purposes it can be any string.
# type=quoted
# compulsory=true
# sort-key=a0

# # Model ??
# [template variables=m??_data_source]
# ns=Models and Cases/Model ??
# title=Data source
# description=From whence to retrieve the forecast.
# help=System from which to retrieve the forecast data. Filesystem is generic,
#     while the others are site-specific.
# values="filesystem", "mass"
# value-titles=Filesystem, MASS
# compulsory=true
# sort-key=a1

# [template variables=m??_data_path]
# ns=Models and Cases/Model ??
# title=Data path
# description=The path to the forecast.
# help=Full path (including file name) to the forecast data on your chosen storage
#     system. Can contain wildcards. No quotation marks required in rose edit, as
#     it is already quoted there.
#
#     strftime format strings are supported, and will be replaced with the
#     desired case study date or trial time. E.g: `/data/%Y%m%d/model1/*.nc`
#
#     For forecast lead time, %N can be used which is replaced by the 3 digit
#     lead time in hours. The regular placeholders are still usable, and refer
#     to the initiation time E.g: `/data/case_%Y%m%d/model1_%N.nc`
#
#     Commonly useful placeholders:
#     %Y: Year, e.g: 2024
#     %m: Month, e.g: 12
#     %d: Day, e.g: 31
#     %H: Hour, e.g: 23
#     %M: Minute, e.g: 59
#     %N: Forecast lead time in hours, e.g: 012
#
#     For more on strftime format strings, see: https://strftime.org
# type=quoted
# compulsory=true
# sort-key=a2

# [template variables=m??_date_type]
# ns=Models and Cases/Model ??
# title=Date placeholder type
# description=Type of date templated into the data path.
# help=The type of date templated into the data path. Affects interpretation of
#     strftime placeholders in the data path.

#     Validity time is when the data is predicting for.

#     Forecast initiation time, AKA data time, is the time of the validity time of
#     the first data point. For realtime forecasts this is approximately when the
#     forecast was started.

#     Forecast lead time is how far from the forecast initiation time the data is.
# values="initiation", "validity", "lead"
# value-titles=Forecast Initiation Time, Validity Time, Forecast Lead Time
# compulsory=true
# trigger=template variables=m??_data_period: "validity", "lead";
# sort-key=b1

# [template variables=m??_data_period]
# ns=Models and Cases/Model ??
# title=Data period
# description=The period of the underlying data
# help=The period of the input data in each file as an ISO 8601 duration. This
#     is used to fetch files at regular validity or lead times.
#     E.g. for hourly data: PT1H
# type=quoted
# compulsory=true
# sort-key=b2

# [template variables=m??_preprocessing]
# ns=Models and Cases/Model ??
# title=Preprocess
# description=Preprocess all of the model data.
# help=Whether to preprocess all of the model data. This is useful for applying
#     any necessary transformations to the data before it is used in the workflow,
#     such as removing boundary regions.
# type=python_boolean
# compulsory=true
# trigger=template variables=m??_preprocessing_recipe: True;
# sort-key=c1

# [template variables=m??_preprocessing_recipe]
# ns=Models and Cases/Model ??
# title=Preprocessing recipe
# description=The preprocessing recipe to use. NOTE: Not yet implemented.
# help=The preprocessing recipe to use.
# type=quoted
# compulsory=true
# sort-key=c2


# Model 01
[template variables=m01_name]
ns=Models and Cases/Model 01
title=Model name
description=A friendly name for the model.
help=A recognisable name for this particular model. This is carried through to
     the output webpage, and identifies the model. As it is only used for
     display purposes it can be any string.
type=quoted
compulsory=true
sort-key=a0

[template variables=m01_data_source]
ns=Models and Cases/Model 01
title=Data source
description=From whence to retrieve the forecast.
help=System from which to retrieve the forecast data. Filesystem is generic,
    while the others are site-specific.
values="filesystem", "mass"
value-titles=Filesystem, MASS
compulsory=true
sort-key=a1

[template variables=m01_data_path]
ns=Models and Cases/Model 01
title=Data path
description=The path to the forecast.
help=Full path (including file name) to the forecast data on your chosen storage
    system. Can contain wildcards. No quotation marks required in rose edit, as
    it is already quoted there.

    strftime format strings are supported, and will be replaced with the
    desired case study date or trial time. E.g: `/data/%Y%m%d/model1/*.nc`

    For forecast lead time, %N can be used which is replaced by the 3 digit
    lead time in hours. The regular placeholders are still usable, and refer
    to the initiation time E.g: `/data/case_%Y%m%d/model1_%N.nc`

    Commonly useful placeholders:
    %Y: Year, e.g: 2024
    %m: Month, e.g: 12
    %d: Day, e.g: 31
    %H: Hour, e.g: 23
    %M: Minute, e.g: 59
    %N: Forecast lead time in hours, e.g: 012

    For more on strftime format strings, see: https://strftime.org
type=quoted
compulsory=true
sort-key=a2

[template variables=m01_date_type]
ns=Models and Cases/Model 01
title=Date placeholder type
description=Type of date templated into the data path.
help=The type of date templated into the data path. Affects interpretation of
    strftime placeholders in the data path.

    Forecast initiation time, AKA data time, is the time of the validity time of
    the first data point. For realtime forecasts this is approximately when the
    forecast was started.

    Validity time is when the data is predicting for.

    Forecast lead time is how far from the forecast initiation time the data is.
values="initiation", "validity", "lead"
value-titles=Forecast Initiation Time, Validity Time, Forecast Lead Time
compulsory=true
trigger=template variables=m01_data_period: "validity", "lead";
sort-key=b1

[template variables=m01_data_period]
ns=Models and Cases/Model 01
title=Data period
description=The period of the underlying data
help=The period of the input data in each file as an ISO 8601 duration. This
    is used to fetch files at regular validity or lead times.
    E.g. for hourly data: PT1H
type=quoted
compulsory=true
sort-key=b2

[template variables=m01_preprocessing]
ns=Models and Cases/Model 01
title=Preprocess
description=Preprocess all of the model data.
help=Whether to preprocess all of the model data. This is useful for applying
    any necessary transformations to the data before it is used in the workflow,
    such as removing boundary regions.
type=python_boolean
compulsory=true
trigger=template variables=m01_preprocessing_recipe: True;
sort-key=c1

[template variables=m01_preprocessing_recipe]
ns=Models and Cases/Model 01
title=Preprocessing recipe
description=The preprocessing recipe to use. NOTE: Not yet implemented.
help=The preprocessing recipe to use.
type=quoted
compulsory=true
sort-key=c2


# Model 02
[template variables=m02_name]
ns=Models and Cases/Model 02
title=Model name
description=A friendly name for the model.
help=A recognisable name for this particular model. This is carried through to
     the output webpage, and identifies the model. As it is only used for
     display purposes it can be any string.
type=quoted
compulsory=true
sort-key=a0

[template variables=m02_data_source]
ns=Models and Cases/Model 02
title=Data source
description=From whence to retrieve the forecast.
help=System from which to retrieve the forecast data. Filesystem is generic,
    while the others are site-specific.
values="filesystem", "mass"
value-titles=Filesystem, MASS
compulsory=true
sort-key=a1

[template variables=m02_data_path]
ns=Models and Cases/Model 02
title=Data path
description=The path to the forecast.
help=Full path (including file name) to the forecast data on your chosen storage
    system. Can contain wildcards. No quotation marks required in rose edit, as
    it is already quoted there.

    strftime format strings are supported, and will be replaced with the
    desired case study date or trial time. E.g: `/data/%Y%m%d/model1/*.nc`

    For forecast lead time, %N can be used which is replaced by the 3 digit
    lead time in hours. The regular placeholders are still usable, and refer
    to the initiation time E.g: `/data/case_%Y%m%d/model1_%N.nc`

    Commonly useful placeholders:
    %Y: Year, e.g: 2024
    %m: Month, e.g: 12
    %d: Day, e.g: 31
    %H: Hour, e.g: 23
    %M: Minute, e.g: 59
    %N: Forecast lead time in hours, e.g: 012

    For more on strftime format strings, see: https://strftime.org
type=quoted
compulsory=true
sort-key=a2

[template variables=m02_date_type]
ns=Models and Cases/Model 02
title=Date placeholder type
description=Type of date templated into the data path.
help=The type of date templated into the data path. Affects interpretation of
    strftime placeholders in the data path.

    Forecast initiation time, AKA data time, is the time of the validity time of
    the first data point. For realtime forecasts this is approximately when the
    forecast was started.

    Validity time is when the data is predicting for.

    Forecast lead time is how far from the forecast initiation time the data is.
values="initiation", "validity", "lead"
value-titles=Forecast Initiation Time, Validity Time, Forecast Lead Time
compulsory=true
trigger=template variables=m02_data_period: "validity", "lead";
sort-key=b1

[template variables=m02_data_period]
ns=Models and Cases/Model 02
title=Data period
description=The period of the underlying data
help=The period of the input data in each file as an ISO 8601 duration. This
    is used to fetch files at regular validity or lead times.
    E.g. for hourly data: PT1H
type=quoted
compulsory=true
sort-key=b2

[template variables=m02_preprocessing]
ns=Models and Cases/Model 02
title=Preprocess
description=Preprocess all of the model data.
help=Whether to preprocess all of the model data. This is useful for applying
    any necessary transformations to the data before it is used in the workflow,
    such as removing boundary regions.
type=python_boolean
compulsory=true
trigger=template variables=m02_preprocessing_recipe: True;
sort-key=c1

[template variables=m02_preprocessing_recipe]
ns=Models and Cases/Model 02
title=Preprocessing recipe
description=The preprocessing recipe to use. NOTE: Not yet implemented.
help=The preprocessing recipe to use.
type=quoted
compulsory=true
sort-key=c2


# Model 03
[template variables=m03_name]
ns=Models and Cases/Model 03
title=Model name
description=A friendly name for the model.
help=A recognisable name for this particular model. This is carried through to
     the output webpage, and identifies the model. As it is only used for
     display purposes it can be any string.
type=quoted
compulsory=true
sort-key=a0

[template variables=m03_data_source]
ns=Models and Cases/Model 03
title=Data source
description=From whence to retrieve the forecast.
help=System from which to retrieve the forecast data. Filesystem is generic,
    while the others are site-specific.
values="filesystem", "mass"
value-titles=Filesystem, MASS
compulsory=true
sort-key=a1

[template variables=m03_data_path]
ns=Models and Cases/Model 03
title=Data path
description=The path to the forecast.
help=Full path (including file name) to the forecast data on your chosen storage
    system. Can contain wildcards. No quotation marks required in rose edit, as
    it is already quoted there.

    strftime format strings are supported, and will be replaced with the
    desired case study date or trial time. E.g: `/data/%Y%m%d/model1/*.nc`

    For forecast lead time, %N can be used which is replaced by the 3 digit
    lead time in hours. The regular placeholders are still usable, and refer
    to the initiation time E.g: `/data/case_%Y%m%d/model1_%N.nc`

    Commonly useful placeholders:
    %Y: Year, e.g: 2024
    %m: Month, e.g: 12
    %d: Day, e.g: 31
    %H: Hour, e.g: 23
    %M: Minute, e.g: 59
    %N: Forecast lead time in hours, e.g: 012

    For more on strftime format strings, see: https://strftime.org
type=quoted
compulsory=true
sort-key=a2

[template variables=m03_date_type]
ns=Models and Cases/Model 03
title=Date placeholder type
description=Type of date templated into the data path.
help=The type of date templated into the data path. Affects interpretation of
    strftime placeholders in the data path.

    Forecast initiation time, AKA data time, is the time of the validity time of
    the first data point. For realtime forecasts this is approximately when the
    forecast was started.

    Validity time is when the data is predicting for.

    Forecast lead time is how far from the forecast initiation time the data is.
values="initiation", "validity", "lead"
value-titles=Forecast Initiation Time, Validity Time, Forecast Lead Time
compulsory=true
trigger=template variables=m03_data_period: "validity", "lead";
sort-key=b1

[template variables=m03_data_period]
ns=Models and Cases/Model 03
title=Data period
description=The period of the underlying data
help=The period of the input data in each file as an ISO 8601 duration. This
    is used to fetch files at regular validity or lead times.
    E.g. for hourly data: PT1H
type=quoted
compulsory=true
sort-key=b2

[template variables=m03_preprocessing]
ns=Models and Cases/Model 03
title=Preprocess
description=Preprocess all of the model data.
help=Whether to preprocess all of the model data. This is useful for applying
    any necessary transformations to the data before it is used in the workflow,
    such as removing boundary regions.
type=python_boolean
compulsory=true
trigger=template variables=m03_preprocessing_recipe: True;
sort-key=c1

[template variables=m03_preprocessing_recipe]
ns=Models and Cases/Model 03
title=Preprocessing recipe
description=The preprocessing recipe to use. NOTE: Not yet implemented.
help=The preprocessing recipe to use.
type=quoted
compulsory=true
sort-key=c2


# Model 04
[template variables=m04_name]
ns=Models and Cases/Model 04
title=Model name
description=A friendly name for the model.
help=A recognisable name for this particular model. This is carried through to
     the output webpage, and identifies the model. As it is only used for
     display purposes it can be any string.
type=quoted
compulsory=true
sort-key=a0

[template variables=m04_data_source]
ns=Models and Cases/Model 04
title=Data source
description=From whence to retrieve the forecast.
help=System from which to retrieve the forecast data. Filesystem is generic,
    while the others are site-specific.
values="filesystem", "mass"
value-titles=Filesystem, MASS
compulsory=true
sort-key=a1

[template variables=m04_data_path]
ns=Models and Cases/Model 04
title=Data path
description=The path to the forecast.
help=Full path (including file name) to the forecast data on your chosen storage
    system. Can contain wildcards. No quotation marks required in rose edit, as
    it is already quoted there.

    strftime format strings are supported, and will be replaced with the
    desired case study date or trial time. E.g: `/data/%Y%m%d/model1/*.nc`

    For forecast lead time, %N can be used which is replaced by the 3 digit
    lead time in hours. The regular placeholders are still usable, and refer
    to the initiation time E.g: `/data/case_%Y%m%d/model1_%N.nc`

    Commonly useful placeholders:
    %Y: Year, e.g: 2024
    %m: Month, e.g: 12
    %d: Day, e.g: 31
    %H: Hour, e.g: 23
    %M: Minute, e.g: 59
    %N: Forecast lead time in hours, e.g: 012

    For more on strftime format strings, see: https://strftime.org
type=quoted
compulsory=true
sort-key=a2

[template variables=m04_date_type]
ns=Models and Cases/Model 04
title=Date placeholder type
description=Type of date templated into the data path.
help=The type of date templated into the data path. Affects interpretation of
    strftime placeholders in the data path.

    Forecast initiation time, AKA data time, is the time of the validity time of
    the first data point. For realtime forecasts this is approximately when the
    forecast was started.

    Validity time is when the data is predicting for.

    Forecast lead time is how far from the forecast initiation time the data is.
values="initiation", "validity", "lead"
value-titles=Forecast Initiation Time, Validity Time, Forecast Lead Time
compulsory=true
trigger=template variables=m04_data_period: "validity", "lead";
sort-key=b1

[template variables=m04_data_period]
ns=Models and Cases/Model 04
title=Data period
description=The period of the underlying data
help=The period of the input data in each file as an ISO 8601 duration. This
    is used to fetch files at regular validity or lead times.
    E.g. for hourly data: PT1H
type=quoted
compulsory=true
sort-key=b2

[template variables=m04_preprocessing]
ns=Models and Cases/Model 04
title=Preprocess
description=Preprocess all of the model data.
help=Whether to preprocess all of the model data. This is useful for applying
    any necessary transformations to the data before it is used in the workflow,
    such as removing boundary regions.
type=python_boolean
compulsory=true
trigger=template variables=m04_preprocessing_recipe: True;
sort-key=c1

[template variables=m04_preprocessing_recipe]
ns=Models and Cases/Model 04
title=Preprocessing recipe
description=The preprocessing recipe to use. NOTE: Not yet implemented.
help=The preprocessing recipe to use.
type=quoted
compulsory=true
sort-key=c2


# Model 05
[template variables=m05_name]
ns=Models and Cases/Model 05
title=Model name
description=A friendly name for the model.
help=A recognisable name for this particular model. This is carried through to
     the output webpage, and identifies the model. As it is only used for
     display purposes it can be any string.
type=quoted
compulsory=true
sort-key=a0

[template variables=m05_data_source]
ns=Models and Cases/Model 05
title=Data source
description=From whence to retrieve the forecast.
help=System from which to retrieve the forecast data. Filesystem is generic,
    while the others are site-specific.
values="filesystem", "mass"
value-titles=Filesystem, MASS
compulsory=true
sort-key=a1

[template variables=m05_data_path]
ns=Models and Cases/Model 05
title=Data path
description=The path to the forecast.
help=Full path (including file name) to the forecast data on your chosen storage
    system. Can contain wildcards. No quotation marks required in rose edit, as
    it is already quoted there.

    strftime format strings are supported, and will be replaced with the
    desired case study date or trial time. E.g: `/data/%Y%m%d/model1/*.nc`

    For forecast lead time, %N can be used which is replaced by the 3 digit
    lead time in hours. The regular placeholders are still usable, and refer
    to the initiation time E.g: `/data/case_%Y%m%d/model1_%N.nc`

    Commonly useful placeholders:
    %Y: Year, e.g: 2024
    %m: Month, e.g: 12
    %d: Day, e.g: 31
    %H: Hour, e.g: 23
    %M: Minute, e.g: 59
    %N: Forecast lead time in hours, e.g: 012

    For more on strftime format strings, see: https://strftime.org
type=quoted
compulsory=true
sort-key=a2

[template variables=m05_date_type]
ns=Models and Cases/Model 05
title=Date placeholder type
description=Type of date templated into the data path.
help=The type of date templated into the data path. Affects interpretation of
    strftime placeholders in the data path.

    Forecast initiation time, AKA data time, is the time of the validity time of
    the first data point. For realtime forecasts this is approximately when the
    forecast was started.

    Validity time is when the data is predicting for.

    Forecast lead time is how far from the forecast initiation time the data is.
values="initiation", "validity", "lead"
value-titles=Forecast Initiation Time, Validity Time, Forecast Lead Time
compulsory=true
trigger=template variables=m05_data_period: "validity", "lead";
sort-key=b1

[template variables=m05_data_period]
ns=Models and Cases/Model 05
title=Data period
description=The period of the underlying data
help=The period of the input data in each file as an ISO 8601 duration. This
    is used to fetch files at regular validity or lead times.
    E.g. for hourly data: PT1H
type=quoted
compulsory=true
sort-key=b2

[template variables=m05_preprocessing]
ns=Models and Cases/Model 05
title=Preprocess
description=Preprocess all of the model data.
help=Whether to preprocess all of the model data. This is useful for applying
    any necessary transformations to the data before it is used in the workflow,
    such as removing boundary regions.
type=python_boolean
compulsory=true
trigger=template variables=m05_preprocessing_recipe: True;
sort-key=c1

[template variables=m05_preprocessing_recipe]
ns=Models and Cases/Model 05
title=Preprocessing recipe
description=The preprocessing recipe to use. NOTE: Not yet implemented.
help=The preprocessing recipe to use.
type=quoted
compulsory=true
sort-key=c2


# Model 06
[template variables=m06_name]
ns=Models and Cases/Model 06
title=Model name
description=A friendly name for the model.
help=A recognisable name for this particular model. This is carried through to
     the output webpage, and identifies the model. As it is only used for
     display purposes it can be any string.
type=quoted
compulsory=true
sort-key=a0

[template variables=m06_data_source]
ns=Models and Cases/Model 06
title=Data source
description=From whence to retrieve the forecast.
help=System from which to retrieve the forecast data. Filesystem is generic,
    while the others are site-specific.
values="filesystem", "mass"
value-titles=Filesystem, MASS
compulsory=true
sort-key=a1

[template variables=m06_data_path]
ns=Models and Cases/Model 06
title=Data path
description=The path to the forecast.
help=Full path (including file name) to the forecast data on your chosen storage
    system. Can contain wildcards. No quotation marks required in rose edit, as
    it is already quoted there.

    strftime format strings are supported, and will be replaced with the
    desired case study date or trial time. E.g: `/data/%Y%m%d/model1/*.nc`

    For forecast lead time, %N can be used which is replaced by the 3 digit
    lead time in hours. The regular placeholders are still usable, and refer
    to the initiation time E.g: `/data/case_%Y%m%d/model1_%N.nc`

    Commonly useful placeholders:
    %Y: Year, e.g: 2024
    %m: Month, e.g: 12
    %d: Day, e.g: 31
    %H: Hour, e.g: 23
    %M: Minute, e.g: 59
    %N: Forecast lead time in hours, e.g: 012

    For more on strftime format strings, see: https://strftime.org
type=quoted
compulsory=true
sort-key=a2

[template variables=m06_date_type]
ns=Models and Cases/Model 06
title=Date placeholder type
description=Type of date templated into the data path.
help=The type of date templated into the data path. Affects interpretation of
    strftime placeholders in the data path.

    Forecast initiation time, AKA data time, is the time of the validity time of
    the first data point. For realtime forecasts this is approximately when the
    forecast was started.

    Validity time is when the data is predicting for.

    Forecast lead time is how far from the forecast initiation time the data is.
values="initiation", "validity", "lead"
value-titles=Forecast Initiation Time, Validity Time, Forecast Lead Time
compulsory=true
trigger=template variables=m06_data_period: "validity", "lead";
sort-key=b1

[template variables=m06_data_period]
ns=Models and Cases/Model 06
title=Data period
description=The period of the underlying data
help=The period of the input data in each file as an ISO 8601 duration. This
    is used to fetch files at regular validity or lead times.
    E.g. for hourly data: PT1H
type=quoted
compulsory=true
sort-key=b2

[template variables=m06_preprocessing]
ns=Models and Cases/Model 06
title=Preprocess
description=Preprocess all of the model data.
help=Whether to preprocess all of the model data. This is useful for applying
    any necessary transformations to the data before it is used in the workflow,
    such as removing boundary regions.
type=python_boolean
compulsory=true
trigger=template variables=m06_preprocessing_recipe: True;
sort-key=c1

[template variables=m06_preprocessing_recipe]
ns=Models and Cases/Model 06
title=Preprocessing recipe
description=The preprocessing recipe to use. NOTE: Not yet implemented.
help=The preprocessing recipe to use.
type=quoted
compulsory=true
sort-key=c2


# Model 07
[template variables=m07_name]
ns=Models and Cases/Model 07
title=Model name
description=A friendly name for the model.
help=A recognisable name for this particular model. This is carried through to
     the output webpage, and identifies the model. As it is only used for
     display purposes it can be any string.
type=quoted
compulsory=true
sort-key=a0

[template variables=m07_data_source]
ns=Models and Cases/Model 07
title=Data source
description=From whence to retrieve the forecast.
help=System from which to retrieve the forecast data. Filesystem is generic,
    while the others are site-specific.
values="filesystem", "mass"
value-titles=Filesystem, MASS
compulsory=true
sort-key=a1

[template variables=m07_data_path]
ns=Models and Cases/Model 07
title=Data path
description=The path to the forecast.
help=Full path (including file name) to the forecast data on your chosen storage
    system. Can contain wildcards. No quotation marks required in rose edit, as
    it is already quoted there.

    strftime format strings are supported, and will be replaced with the
    desired case study date or trial time. E.g: `/data/%Y%m%d/model1/*.nc`

    For forecast lead time, %N can be used which is replaced by the 3 digit
    lead time in hours. The regular placeholders are still usable, and refer
    to the initiation time E.g: `/data/case_%Y%m%d/model1_%N.nc`

    Commonly useful placeholders:
    %Y: Year, e.g: 2024
    %m: Month, e.g: 12
    %d: Day, e.g: 31
    %H: Hour, e.g: 23
    %M: Minute, e.g: 59
    %N: Forecast lead time in hours, e.g: 012

    For more on strftime format strings, see: https://strftime.org
type=quoted
compulsory=true
sort-key=a2

[template variables=m07_date_type]
ns=Models and Cases/Model 07
title=Date placeholder type
description=Type of date templated into the data path.
help=The type of date templated into the data path. Affects interpretation of
    strftime placeholders in the data path.

    Forecast initiation time, AKA data time, is the time of the validity time of
    the first data point. For realtime forecasts this is approximately when the
    forecast was started.

    Validity time is when the data is predicting for.

    Forecast lead time is how far from the forecast initiation time the data is.
values="initiation", "validity", "lead"
value-titles=Forecast Initiation Time, Validity Time, Forecast Lead Time
compulsory=true
trigger=template variables=m07_data_period: "validity", "lead";
sort-key=b1

[template variables=m07_data_period]
ns=Models and Cases/Model 07
title=Data period
description=The period of the underlying data
help=The period of the input data in each file as an ISO 8601 duration. This
    is used to fetch files at regular validity or lead times.
    E.g. for hourly data: PT1H
type=quoted
compulsory=true
sort-key=b2

[template variables=m07_preprocessing]
ns=Models and Cases/Model 07
title=Preprocess
description=Preprocess all of the model data.
help=Whether to preprocess all of the model data. This is useful for applying
    any necessary transformations to the data before it is used in the workflow,
    such as removing boundary regions.
type=python_boolean
compulsory=true
trigger=template variables=m07_preprocessing_recipe: True;
sort-key=c1

[template variables=m07_preprocessing_recipe]
ns=Models and Cases/Model 07
title=Preprocessing recipe
description=The preprocessing recipe to use. NOTE: Not yet implemented.
help=The preprocessing recipe to use.
type=quoted
compulsory=true
sort-key=c2


# Model 08
[template variables=m08_name]
ns=Models and Cases/Model 08
title=Model name
description=A friendly name for the model.
help=A recognisable name for this particular model. This is carried through to
     the output webpage, and identifies the model. As it is only used for
     display purposes it can be any string.
type=quoted
compulsory=true
sort-key=a0

[template variables=m08_data_source]
ns=Models and Cases/Model 08
title=Data source
description=From whence to retrieve the forecast.
help=System from which to retrieve the forecast data. Filesystem is generic,
    while the others are site-specific.
values="filesystem", "mass"
value-titles=Filesystem, MASS
compulsory=true
sort-key=a1

[template variables=m08_data_path]
ns=Models and Cases/Model 08
title=Data path
description=The path to the forecast.
help=Full path (including file name) to the forecast data on your chosen storage
    system. Can contain wildcards. No quotation marks required in rose edit, as
    it is already quoted there.

    strftime format strings are supported, and will be replaced with the
    desired case study date or trial time. E.g: `/data/%Y%m%d/model1/*.nc`

    For forecast lead time, %N can be used which is replaced by the 3 digit
    lead time in hours. The regular placeholders are still usable, and refer
    to the initiation time E.g: `/data/case_%Y%m%d/model1_%N.nc`

    Commonly useful placeholders:
    %Y: Year, e.g: 2024
    %m: Month, e.g: 12
    %d: Day, e.g: 31
    %H: Hour, e.g: 23
    %M: Minute, e.g: 59
    %N: Forecast lead time in hours, e.g: 012

    For more on strftime format strings, see: https://strftime.org
type=quoted
compulsory=true
sort-key=a2

[template variables=m08_date_type]
ns=Models and Cases/Model 08
title=Date placeholder type
description=Type of date templated into the data path.
help=The type of date templated into the data path. Affects interpretation of
    strftime placeholders in the data path.

    Forecast initiation time, AKA data time, is the time of the validity time of
    the first data point. For realtime forecasts this is approximately when the
    forecast was started.

    Validity time is when the data is predicting for.

    Forecast lead time is how far from the forecast initiation time the data is.
values="initiation", "validity", "lead"
value-titles=Forecast Initiation Time, Validity Time, Forecast Lead Time
compulsory=true
trigger=template variables=m08_data_period: "validity", "lead";
sort-key=b1

[template variables=m08_data_period]
ns=Models and Cases/Model 08
title=Data period
description=The period of the underlying data
help=The period of the input data in each file as an ISO 8601 duration. This
    is used to fetch files at regular validity or lead times.
    E.g. for hourly data: PT1H
type=quoted
compulsory=true
sort-key=b2

[template variables=m08_preprocessing]
ns=Models and Cases/Model 08
title=Preprocess
description=Preprocess all of the model data.
help=Whether to preprocess all of the model data. This is useful for applying
    any necessary transformations to the data before it is used in the workflow,
    such as removing boundary regions.
type=python_boolean
compulsory=true
trigger=template variables=m08_preprocessing_recipe: True;
sort-key=c1

[template variables=m08_preprocessing_recipe]
ns=Models and Cases/Model 08
title=Preprocessing recipe
description=The preprocessing recipe to use. NOTE: Not yet implemented.
help=The preprocessing recipe to use.
type=quoted
compulsory=true
sort-key=c2


# Model 09
[template variables=m09_name]
ns=Models and Cases/Model 09
title=Model name
description=A friendly name for the model.
help=A recognisable name for this particular model. This is carried through to
     the output webpage, and identifies the model. As it is only used for
     display purposes it can be any string.
type=quoted
compulsory=true
sort-key=a0

[template variables=m09_data_source]
ns=Models and Cases/Model 09
title=Data source
description=From whence to retrieve the forecast.
help=System from which to retrieve the forecast data. Filesystem is generic,
    while the others are site-specific.
values="filesystem", "mass"
value-titles=Filesystem, MASS
compulsory=true
sort-key=a1

[template variables=m09_data_path]
ns=Models and Cases/Model 09
title=Data path
description=The path to the forecast.
help=Full path (including file name) to the forecast data on your chosen storage
    system. Can contain wildcards. No quotation marks required in rose edit, as
    it is already quoted there.

    strftime format strings are supported, and will be replaced with the
    desired case study date or trial time. E.g: `/data/%Y%m%d/model1/*.nc`

    For forecast lead time, %N can be used which is replaced by the 3 digit
    lead time in hours. The regular placeholders are still usable, and refer
    to the initiation time E.g: `/data/case_%Y%m%d/model1_%N.nc`

    Commonly useful placeholders:
    %Y: Year, e.g: 2024
    %m: Month, e.g: 12
    %d: Day, e.g: 31
    %H: Hour, e.g: 23
    %M: Minute, e.g: 59
    %N: Forecast lead time in hours, e.g: 012

    For more on strftime format strings, see: https://strftime.org
type=quoted
compulsory=true
sort-key=a2

[template variables=m09_date_type]
ns=Models and Cases/Model 09
title=Date placeholder type
description=Type of date templated into the data path.
help=The type of date templated into the data path. Affects interpretation of
    strftime placeholders in the data path.

    Forecast initiation time, AKA data time, is the time of the validity time of
    the first data point. For realtime forecasts this is approximately when the
    forecast was started.

    Validity time is when the data is predicting for.

    Forecast lead time is how far from the forecast initiation time the data is.
values="initiation", "validity", "lead"
value-titles=Forecast Initiation Time, Validity Time, Forecast Lead Time
compulsory=true
trigger=template variables=m09_data_period: "validity", "lead";
sort-key=b1

[template variables=m09_data_period]
ns=Models and Cases/Model 09
title=Data period
description=The period of the underlying data
help=The period of the input data in each file as an ISO 8601 duration. This
    is used to fetch files at regular validity or lead times.
    E.g. for hourly data: PT1H
type=quoted
compulsory=true
sort-key=b2

[template variables=m09_preprocessing]
ns=Models and Cases/Model 09
title=Preprocess
description=Preprocess all of the model data.
help=Whether to preprocess all of the model data. This is useful for applying
    any necessary transformations to the data before it is used in the workflow,
    such as removing boundary regions.
type=python_boolean
compulsory=true
trigger=template variables=m09_preprocessing_recipe: True;
sort-key=c1

[template variables=m09_preprocessing_recipe]
ns=Models and Cases/Model 09
title=Preprocessing recipe
description=The preprocessing recipe to use. NOTE: Not yet implemented.
help=The preprocessing recipe to use.
type=quoted
compulsory=true
sort-key=c2


# Model 10
[template variables=m10_name]
ns=Models and Cases/Model 10
title=Model name
description=A friendly name for the model.
help=A recognisable name for this particular model. This is carried through to
     the output webpage, and identifies the model. As it is only used for
     display purposes it can be any string.
type=quoted
compulsory=true
sort-key=a0

[template variables=m10_data_source]
ns=Models and Cases/Model 10
title=Data source
description=From whence to retrieve the forecast.
help=System from which to retrieve the forecast data. Filesystem is generic,
    while the others are site-specific.
values="filesystem", "mass"
value-titles=Filesystem, MASS
compulsory=true
sort-key=a1

[template variables=m10_data_path]
ns=Models and Cases/Model 10
title=Data path
description=The path to the forecast.
help=Full path (including file name) to the forecast data on your chosen storage
    system. Can contain wildcards. No quotation marks required in rose edit, as
    it is already quoted there.

    strftime format strings are supported, and will be replaced with the
    desired case study date or trial time. E.g: `/data/%Y%m%d/model1/*.nc`

    For forecast lead time, %N can be used which is replaced by the 3 digit
    lead time in hours. The regular placeholders are still usable, and refer
    to the initiation time E.g: `/data/case_%Y%m%d/model1_%N.nc`

    Commonly useful placeholders:
    %Y: Year, e.g: 2024
    %m: Month, e.g: 12
    %d: Day, e.g: 31
    %H: Hour, e.g: 23
    %M: Minute, e.g: 59
    %N: Forecast lead time in hours, e.g: 012

    For more on strftime format strings, see: https://strftime.org
type=quoted
compulsory=true
sort-key=a2

[template variables=m10_date_type]
ns=Models and Cases/Model 10
title=Date placeholder type
description=Type of date templated into the data path.
help=The type of date templated into the data path. Affects interpretation of
    strftime placeholders in the data path.

    Forecast initiation time, AKA data time, is the time of the validity time of
    the first data point. For realtime forecasts this is approximately when the
    forecast was started.

    Validity time is when the data is predicting for.

    Forecast lead time is how far from the forecast initiation time the data is.
values="initiation", "validity", "lead"
value-titles=Forecast Initiation Time, Validity Time, Forecast Lead Time
compulsory=true
trigger=template variables=m10_data_period: "validity", "lead";
sort-key=b1

[template variables=m10_data_period]
ns=Models and Cases/Model 10
title=Data period
description=The period of the underlying data
help=The period of the input data in each file as an ISO 8601 duration. This
    is used to fetch files at regular validity or lead times.
    E.g. for hourly data: PT1H
type=quoted
compulsory=true
sort-key=b2

[template variables=m10_preprocessing]
ns=Models and Cases/Model 10
title=Preprocess
description=Preprocess all of the model data.
help=Whether to preprocess all of the model data. This is useful for applying
    any necessary transformations to the data before it is used in the workflow,
    such as removing boundary regions.
type=python_boolean
compulsory=true
trigger=template variables=m10_preprocessing_recipe: True;
sort-key=c1

[template variables=m10_preprocessing_recipe]
ns=Models and Cases/Model 10
title=Preprocessing recipe
description=The preprocessing recipe to use. NOTE: Not yet implemented.
help=The preprocessing recipe to use.
type=quoted
compulsory=true
sort-key=c2


################################################################################
# Diagnostics
################################################################################

[template variables=SURFACE_MODEL_FIELDS]
ns=Diagnostics/Quicklook
title=Surface model fields
description=Per model field names.
help=Variable names for surface variables. The names across a row should match
    the same physical phenomenon, and use the appropriate standard, long, or
    field name, or the STASH code for each model. Blank entries indicate that a
    model does not have that phenomenon, so it will be skipped.

    Ignore the boxes for models that are not enabled.
compulsory=true
element-titles=Model 01,Model 02,Model 03,Model 04,Model 05,Model 06,Model 07,Model 08,Model 09,Model 10
type=quoted,quoted,quoted,quoted,quoted,quoted,quoted,quoted,quoted,quoted
length=:
sort-key=surface1

[template variables=PLOT_SPATIAL_SURFACE_MODEL_FIELD]
ns=Diagnostics/Quicklook
description=Create plots for the specified surface fields.
help=See includes/plot_spatial_surface_model_field.cylc
type=python_boolean
compulsory=true
sort-key=surface2

[template variables=LFRIC_PLOT_SPATIAL_SURFACE_MODEL_FIELD]
ns=Diagnostics/Quicklook
description=Create plots for the specified surface fields for structured LFRic data.
help=See includes/lfric_plot_spatial_surface_model_field.cylc
type=python_boolean
compulsory=true
sort-key=surface2

[template variables=DOMAIN_MEAN_SURFACE_TIME_SERIES]
ns=Diagnostics/Quicklook
description=Create time series plot of surface field domain mean.
help=See includes/deterministic_domain_mean_surface_time_series.cylc
type=python_boolean
compulsory=true
sort-key=surface3

[template variables=LFRIC_DOMAIN_MEAN_SURFACE_TIME_SERIES]
ns=Diagnostics/Quicklook
description=Create time series plot of surface field domain mean for structured LFRic data.
help=See includes/lfric_deterministic_domain_mean_surface_time_series.cylc
type=python_boolean
compulsory=true
sort-key=surface3

[template variables=METPLUS_POINT_STAT]
ns=Diagnostics/Verification
description=Run METplus point stat in the workflow.
help=If True, it will enable the production of verification statistics against
    point observations (i.e. land-synop, sonde,...).
type=python_boolean
trigger=template variables=METPLUS_OPT_CONFIG_KEYS: True;
        template variables=METPLUS_OBS_DIR: True;
compulsory=true
sort-key=met1

[template variables=METPLUS_GRID_STAT]
ns=Diagnostics/Verification
description=Run METplus grid stat in the workflow.
help=If True, it will enable the production of verification statistics against
    gridded data (i.e. radar, analysis,...).
type=python_boolean
trigger=template variables=METPLUS_OPT_CONFIG_KEYS: True;
        template variables=METPLUS_ANA_DIR: True;
compulsory=true
sort-key=met2

[template variables=METPLUS_OPT_CONFIG_KEYS]
ns=Diagnostics/Verification
description=Which METplus configuration to run.
help=Selects the site/model specific configuration to use. The configuration must
    exist as restricted files in
    https://github.com/MetOffice/CSET-workflow/tree/main/app/{app_name}/file
type=quoted
value-hints="metoffice", "niwa"
sort-key=met3

[template variables=METPLUS_OBS_DIR]
ns=Diagnostics/Verification
description=Path to directory containing observations in MET ASCII format.
type=quoted
sort-key=met4

[template variables=METPLUS_ANA_DIR]
ns=Diagnostics/Verification
description=Path to directory containing analysis in MET netcdf format.
type=quoted
sort-key=met5

[template variables=DETERMINISTIC_PLOT_CAPE_RATIO]
ns=Diagnostics/Convection
description=Extracts data required for, and calculates the CAPE ratio diagnostic, plotting on a map.
            Required STASH m01s20i114, m01s20i112, m01s20i113.
help=See includes/deterministic_plot_cape_ratio.cylc
type=python_boolean
compulsory=true
sort-key=cape1

[template variables=EXTRACT_TRANSECT]
ns=Diagnostics
description=Plot a cross section for variables defined in CS_VARS.
help=This functionality extracts data for each variable defined in CS_VARS,
     and extracts a column along each point of the transect. The number of
     points along the transect is determined by calculating the length of the
     transect in degrees, and dividing this by the minimum grid spacing within the domain.
     Additional dimensions (time, ensemble) are accepted and returned as a cross section.
     This allows the user to compute slices through features of meteorological interest,
     such as transects through valleys, or through a front as it passes through.
type=python_boolean
trigger=template variables=CS_STARTCOORDS: True;
        template variables=CS_FINISHCOORDS: True;
        template variables=CS_VARS: True;
        template variables=CS_VERTLEV: True
compulsory=true
sort-key=cs1

[template variables=CS_STARTCOORDS]
ns=Diagnostics
description=Start latitude, longitude of the cross section.
help=The latitude, longitude coordinate with respect to the model grid where the
     cross section will start i.e. the furthest left hand point of the plot, where the x
     axis is distance along transect, and y axis is pressure level).
type=real,real
compulsory=true
sort-key=cs2

[template variables=CS_FINISHCOORDS]
ns=Diagnostics
description=Finish latitude, longitude of the cross section.
help=The latitude, longitude coordinate with respect to the model grid where the
     cross section will finish i.e. the furthest right hand point of the plot, where the x
     axis is distance along transect, and y axis is pressure level).
type=real,real
compulsory=true
sort-key=cs3

[template variables=CS_VARS]
ns=Diagnostics
description=List of all variables to extract.
help=A list of stash codes or variable names to extract from the data, and compute
     the transect over. It must contain multi-level data (i.e. be at least 3D with pressure,
     latitude and longitude coordinates).
type=python_list
compulsory=true
sort-key=cs4

[template variables=CS_VERTLEV]
ns=Diagnostics
description=Name of vertical coordinate to use for transect.
help=A string, containing the vertical coordinate name to use for the transect. Typically
     pressure or model_level_number, this is specified in case the source files contain
     cubes where the variable name is the same, but they are on different vertical grids,
     and it would be ambiguous which cube the user wants to compute the transect on.
type=quoted
compulsory=true
sort-key=cs5

[template variables=DOMAIN_SURFACE_HISTOGRAM_SERIES_FIELD]
ns=Diagnostics
description=Create a series of histogram plots for selected surface fields for each cycle time.
help=See includes/deterministic_domain_surface_histogram_series.cylc. This diagnostic requires the user to also enable and enter the SURFACE_MODEL_FIELDS. The series_coordinate in the recipe is set to "time", but can be switched to any other coordinate.
type=python_boolean
compulsory=true
sort-key=surface2

[template variables=DOMAIN_MEAN_VERTICAL_PROFILE_SERIES]
ns=Diagnostics
description=Domain averaged vertical profile for each validity time.
help=See includes/deterministic_domain_mean_vertical_profile_series.cylc
type=python_boolean
compulsory=true
sort-key=surface1

[template variables=DOMAIN_MEAN_VERTICAL_PROFILE_MODELLEVEL_SERIES]
ns=Diagnostics
description=Domain averaged vertical profile for each validity time. Requires fields UM_MODEL_LEVELS and MODEL_LEVEL_MODEL_FIELDS as input.
help=See includes/deterministic_domain_mean_vertical_profile_modellevel_series.cylc
type=python_boolean
compulsory=true
sort-key=surface1

[template variables=PLOT_SPATIAL_PRESSURE_LEVEL_MODEL_FIELD]
ns=Diagnostics
description=Create plots for the specified pressure level fields.
help=See includes/generic_spatial_plevel_model_field.cylc
type=python_boolean
trigger=template variables=PRESSURE_LEVEL_MODEL_FIELDS: True;
        template variables=PRESSURE_LEVELS: True;
compulsory=true
sort-key=pressure1

[template variables=PLOT_SPATIAL_MODEL_LEVEL_MODEL_FIELD]
ns=Diagnostics
description=Create plots for the specified model level fields.
help=See includes/generic_spatial_mlevel_model_field.cylc
type=python_boolean
trigger=template variables=MODEL_LEVEL_MODEL_FIELDS: True;
        template variables=UM_MODEL_LEVELS: True;
compulsory=true
sort-key=pressure1

[template variables=PRESSURE_LEVEL_MODEL_FIELDS]
ns=Diagnostics
description=List of standard names of model fields on pressure levels to plot.
help=Include a list of variable names in python list format["var1","var2"].
type=python_list
compulsory=true
sort-key=pressure2

[template variables=MODEL_LEVEL_MODEL_FIELDS]
ns=Diagnostics
description=List of standard names of UM model fields on model levels to plot.
help=Include a list of variable names in python list format, e.g: ["var1","var2"]
type=python_list
compulsory=true
sort-key=pressure2

[template variables=PRESSURE_LEVELS]
ns=Diagnostics
description=List of pressure levels to generate plots for.
help=Include an INTEGER list of pressure levels in hPa in python list format[1000,850].
type=python_list
compulsory=true
sort-key=pressure2

[template variables=UM_MODEL_LEVELS]
ns=Diagnostics
description=List of UM model levels to generate plots for.
help=Include an integer list of model levels in python list format, e.g: [1,2,3,4]
type=python_list
compulsory=true
sort-key=pressure2

[template variables=STASH_CODES]
ns=Diagnostics
description=List of STASH codes to plot.
type=python_list
compulsory=true
sort-key=stash1

[template variables=PLOT_SPATIAL_STASH_FIELD]
ns=Diagnostics
description=Create plots for the specified STASH fields.
help=See includes/plot_spatial_stash_field.cylc
type=python_boolean
compulsory=true
sort-key=stash2

[template variables=DOMAIN_MEAN_TIME_SERIES_STASH]
ns=Diagnostics
description=Create time series plot of the STASH fields domain mean.
help=See includes/domain_mean_time_series_stash.cylc
type=python_boolean
compulsory=true
sort-key=stash2

[template variables=SURFACE_SINGLE_POINT_TIME_SERIES]
ns=Diagnostics
description=Plot a time series at a single specified location in a surface field.
help=Include values of desired longitude and latitude.
type=python_boolean
compulsory=true
trigger=template variables=LATITUDE_POINT: True;
        template variables=LONGITUDE_POINT: True;
        template variables=SINGLE_POINT_METHOD: True;
sort-key=point1

[template variables=LATITUDE_POINT]
ns=Diagnostics
description=Latitude of selected point. Note that this could be rotated or not, depending on the data provided.
help=The latitude must exist within the domain. Value should be a float: for example, -1.5.
type=real
compulsory=true
sort-key=point2

[template variables=LONGITUDE_POINT]
ns=Diagnostics
description=Longitude of selected point. Note that this could be rotated or not, depending on the data provided.
help=The longitude must exist within the domain. Value should be a float: for example, 0.8.
type=real
compulsory=true
sort-key=point2

[template variables=SINGLE_POINT_METHOD]
ns=Diagnostics
description=Method used to map model data onto selected gridpoints.
help=Method used to map model data onto selected gridpoints. These are regrid methods available in Iris.
values="Nearest", "Linear"
compulsory=true
sort-key=point2

[template variables=BASIC_QQ_PLOT]
ns=Diagnostics
description=Create a basic quantile-quantile plot for variables specified collapsing over specified coordinates.
            Produces a single Q-Q plot and so requires collapsing across all coordinates in the file.
help=The quantiles defined for each variable are 0, 0.001, 0.01,
     0.1,1,5,10,15,20,25,30,40,50,60,70,75,80,85,90,95,99,99.9,99.99,
     99.999,100.
     If more than one variable is supplied e.g. MODEL_FIELDS_A='a','b',...;
     MODEL_FIELDS_B='c','d',...; the Q-Q plot will compare 'a' vs. 'c',
     'b' vs. 'd', etc.
     It is expected that the length of MODEL_FIELDS_A is the same as
     MODEL_FIELDS_B.
trigger=template variables=MODEL_FIELDS_A: True;
        template variables=VERTICAL_COORDINATE_A: True;
        template variables=LEVELS_A: True;
        template variables=MODEL_FIELDS_B: True;
        template variables=VERTICAL_COORDINATE_B: True;
        template variables=LEVELS_B: True;
        template variables=COORDINATE_LIST: True;
        template variables=ONE_TO_ONE: True;
type=python_boolean
compulsory=true
sort-key=qq1

[template variables=MODEL_FIELDS_A]
ns=Diagnostics
description=List of standard names for model fields to plot on y axis.
            Must be the same length as MODEL_FIELDS_B.
help=Include a list of variable names in python list format["var1","var2"].
type=python_list
compulsory=true
sort-key=qq1a

[template variables=VERTICAL_COORDINATE_A]
ns=Diagnostics
description=Level coordinate name about which to constrain. The length of this
            list should be the same as MODEL_FIELDS A.
help=Include a list of coordinate names in python list format["var1","var2"].
     If single levels are required use any vertical coordinate in the cube and
     make sure to put LEVELS_A as [].
type=python_list
compulsory=true
sort-key=qq1b

[template variables=LEVELS_A]
ns=Diagnostics
description=A list of levels to constrain over. The length of this
            list should be the same as MODEL_FIELDS A.
help=Use "*" for all levels, INTEGERS for specific levels, and [] for no levels
     (e.g., single level fields).
type=python_list
compulsory=true
sort-key=qq1c

[template variables=MODEL_FIELDS_B]
ns=Diagnostics
description=List of standard names for model fields to plot on x axis.
            Must be the same length as MODEL_FIELDS_A.
help=Include a list of variable names in python list format["var1","var2"].
type=python_list
compulsory=true
sort-key=qq1d

[template variables=VERTICAL_COORDINATE_B]
ns=Diagnostics
description=Level coordinate name about which to constrain. The length of this
            list should be the same as MODEL_FIELDS B.
help=Include a list of coordinate names in python list format["var1","var2"].
     If single levels are required use any vertical coordinate in the cube and
     make sure to put LEVELS_B as [].
type=python_list
compulsory=true
sort-key=qq1e

[template variables=LEVELS_B]
ns=Diagnostics
description=A list of levels to constrain over. The length of this
            list should be the same as MODEL_FIELDS B.
help=Use "*" for all levels, INTEGERS for specific levels, and [] for no levels
     (e.g., single level fields).
type=python_list
compulsory=true
sort-key=qq1f

[template variables=COORDINATE_LIST]
ns=Diagnostics
description=List of coordinates to collapse the percentiles over. The coordinate list
            must be of the form [\\"var1\\",\\"var2\\",...].The values should be
            all of the coordinates in the cube to ensure the output is 1D with the
            percentiles as the coordinate.
help=Include a list of coordinates in python list format[\\"var1\\",\\"var2\\"].
type=quoted
compulsory=true
sort-key=qq1g

[template variables=ONE_TO_ONE]
ns=Diagnostics
description=One-to-one line option for plots.
help=Set to True if you want a one-to-one line; false if not.
type=python_boolean
compulsory=true
sort-key=qq1h

[template variables=SELECT_SUBAREA]
ns=Diagnostics
description=Only analyse a subset of the region defined by the input data.
help=Select this option to run a recipe over a defined latitude-longitude range.
trigger=template variables=SUBAREA_LAT_BOUND_TOP: True;
       =template variables=SUBAREA_LAT_BOUND_BOTTOM: True;
       =template variables=SUBAREA_LON_BOUND_LEFT: True;
       =template variables=SUBAREA_LON_BOUND_RIGHT: True;
type=python_boolean
compulsory=true
sort-key=subsection1

[template variables=SUBAREA_LAT_BOUND_TOP]
ns=Diagnostics
description=Top edge coordinate of the sub-area, real.
help=Recommend looking at the input data to get these values. Uses the grid’s native units.
type=real
sort-key=subsection2
compulsory=true

[template variables=SUBAREA_LAT_BOUND_BOTTOM]
ns=Diagnostics
description=Bottom edge coordinate of the sub-area, real.
help=Recommend looking at the input data to get these values. Uses the grid’s native units.
type=real
sort-key=subsection2
compulsory=true

[template variables=SUBAREA_LON_BOUND_LEFT]
ns=Diagnostics
description=Left edge coordinate of the sub-area, real.
help=Recommend looking at the input data to get these values. Uses the grid’s native units.
type=real
sort-key=subsection2
compulsory=true

[template variables=SUBAREA_LON_BOUND_RIGHT]
ns=Diagnostics
description=Right edge coordinate of the sub-area, real.
help=Recommend looking at the input data to get these values. Uses the grid’s native units.
type=real
sort-key=subsection2
compulsory=true

[template variables=DETERMINISTIC_PLOT_INFLOW_PROPERTIES]
ns=Diagnostics/Convection
description=Extracts data required for, and calculates the inflow properties diagnostic, plotting on a map.
            Required STASH m01s20i119, m01s00i025, m01s00i033.
help=See includes/deterministic_plot_inflow_properties.cylc
type=python_boolean
compulsory=true

[template variables=DOMAIN_HISTOGRAM_SERIES]
ns=Diagnostics
description=Create a series of histogram plots for selected vertical levels for each cycle time.
help=See includes/deterministic_domain_histogram_series.cylc
trigger=template variables=HISTOGRAM_TYPE: True;
type=python_boolean
compulsory=true
sort-key=hist1

[template variables=HISTOGRAM_TYPE]
ns=Diagnostics
description=Type of histogram to plot. "step", "barstacked" or "stepfilled"
help=The type of histogram to plot. Options are "step" for a line histogram or "barstacked", "stepfilled"
values="step","barstacked","stepfilled"
compulsory=true
sort-key=hist3
