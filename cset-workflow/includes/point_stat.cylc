{% if METPLUS_POINT_STAT|default(False) %}
[scheduling]
    [[graph]]
    {% for metplus_obs_type in METPLUS_OBS_TYPES %}
        {% if CSET_CYCLING_MODE == "case_study" %}
            # Runs for every forecast initiation time to process the data in parallel.
            {% for date in CSET_CASE_DATES %}
            R1/{{date}} = """
            metplus_ascii2nc_{{metplus_obs_type}} => metplus_point_stat_{{metplus_obs_type}} => housekeeping_full
            """
            {% endfor %}
        {% elif CSET_CYCLING_MODE == "trial" %}
            # Analyse from each forecast.
            {{CSET_TRIAL_CYCLE_PERIOD}} = """
            metplus_ascii2nc_{{metplus_obs_type}} => metplus_point_stat_{{metplus_obs_type}} => housekeeping_full
            """
        {% endif %}
    {% endfor %}

[runtime]
    {% for metplus_obs_type in METPLUS_OBS_TYPES %}
    [[metplus_ascii2nc__{{metplus_obs_type}}]]
    # Runs METplus wrappers for ASCII to nc ingestion of obs.
    # Note that the setting of FORECAST_LENGTH maight be done better in the gui using metadata
        inherit = METPLUS
        [[[environment]]]
           TASK_INIT_TIME = $(cylc cycle-point --template=%Y%m%d%H)
           {% if CSET_CYCLING_MODE == "case_study" %}
           TASK_END_TIME = $(cylc cycle-point --template=%Y%m%d%H --offset-hours={{FORECAST_LENGHT}})
           FORECAST_LENGTH = {{FORECAST_LENGHT}}
           {% elif CSET_CYCLING_MODE == "trial" %}
           TASK_END_TIME = $(cylc cycle-point --template=%Y%m%d%H)
           FORECAST_LENGTH = 0
           {% endif %}
           metplus_obs_type = {{metplus_obs_type}}

    [[metplus_point_stat]]
    # Runs METplus wrappers for point stat calculations.
        inherit = METPLUS
        [[[environment]]]
           TASK_INIT_TIME = $(cylc cycle-point --template=%Y%m%d%H)
           FORECAST_LENGTH = {{FORECAST_LENGHT}}
           metplus_obs_type = {{metplus_obs_type}}

{% endif %}
