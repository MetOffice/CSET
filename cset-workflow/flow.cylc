#!jinja2
[meta]
title = CSET
description = Workflow for running CSET.
URL = https://metoffice.github.io/CSET

[scheduling]
    runahead limit = P{{CSET_RUNAHEAD_LIMIT}}
    initial cycle point = 1000-01-01

    [[graph]]
    # Only runs on the first cycle.
    R1/^ = """
    build_conda => install_local_cset
    build_conda => install_website_skeleton
    install_local_cset & install_website_skeleton => setup_complete
    """

    # Runs for every forecast initiation time to process the data in parallel.
    {% for date in CSET_CASE_DATES %}
    R1/{{date}} = """
    setup_complete[^] => FETCH_DATA:succeed-all => PROCESS:finish-all => process_finish => housekeeping_raw
    """
    {% endfor %}

    # Only runs on the final cycle.
    R1/$ = """
    PROCESS:finish-all => finish_website => send_email
    PROCESS:finish-all => housekeeping_full
    """

[runtime]
    [[root]]
    script = rose task-run -v
    execution time limit = PT15M
        [[[environment]]]
        CSET_ENV_USE_MODULES = {{CSET_ENV_USE_MODULES}}
        {% if CSET_ENV_USE_MODULES %}
        MODULES_LIST = {{MODULES_LIST}}
        MODULES_PURGE = {{MODULES_PURGE}}
        {% endif %}

        CSET_ENV_USE_CONDA = {{CSET_ENV_USE_CONDA}}
        {% if CSET_ENV_USE_CONDA %}
        CONDA_PATH = {{CONDA_PATH}}
        CONDA_VENV_LOCATION = {{CONDA_VENV_LOCATION}}
        {% endif %}

        CSET_ENV_SEPARATE_MET = {{CSET_ENV_SEPARATE_MET}}
        {% if CSET_ENV_SEPARATE_MET %}
        CONDA_METPLUS_VENV_LOCATION = {{CONDA_METPLUS_VENV_LOCATION}}
        MET_INSTALL_DIR = {{MET_INSTALL_DIR}}
        MET_BUILD_BASE = {{MET_BUILD_BASE}}
        METPLUS_BASE = {{METPLUS_BASE}}
        MET_LIBRARIES = {{MET_LIBRARIES}}
        {% endif %}

        LOGLEVEL = {{LOGLEVEL}}
        WEB_DIR = {{WEB_DIR}}
        COLORBAR_FILE = {{COLORBAR_FILE}}
        PLOT_RESOLUTION = {{PLOT_RESOLUTION}}

    [[PROCESS]]
    script = rose task-run -v --app-key=run_cset_recipe

    [[FETCH_DATA]]

    [[METPLUS]]
        [[[environment]]]
            {% if METPLUS_GRID_STAT %}
            METPLUS_ANA_DIR = {{METPLUS_ANA_DIR}}
            METPLUS_FCST_DIR = {{METPLUS_FCST_DIR}}
            METPLUS_OBS_DIR = {{METPLUS_OBS_DIR}}
            ROSE_APP_OPT_CONF_KEYS = {{METPLUS_OPT_CONFIG_KEYS}}
            {% endif %}

    [[DUMMY_TASK]]
    script = true
    platform = localhost
    execution time limit = PT1M

    [[setup_complete]]
    inherit = DUMMY_TASK

    [[build_conda]]
    # Create the conda environment if it does not yet exist, possibly installing
    # CSET from source.
    execution time limit = PT30M
        [[[environment]]]
        CONDA_VENV_CREATE = {{CONDA_VENV_CREATE}}
        CSET_ENV_USE_LOCAL_CSET = {{CSET_ENV_USE_LOCAL_CSET}}
        {% if CSET_ENV_USE_LOCAL_CSET %}
        CSET_LOCAL_CSET_PATH = {{CSET_LOCAL_CSET_PATH}}
        {% endif %}

    [[install_website_skeleton]]
    # Copies the static files that make up the web interface.

    [[fetch_fcst]]
    # Fetch data from disk or a file based archival system.
    inherit = FETCH_DATA
        [[[environment]]]
        ROSE_APP_OPT_CONF_KEYS = {{FETCH_FCST_OPT_CONF}}
        CSET_INPUT_FILE_PATH = {{CSET_INPUT_FILE_PATH}}
        {% if CSET_INCREMENTAL_DATA_FETCH %}
        CSET_FILE_NAME_METADATA_PATTERN = {{CSET_FILE_NAME_METADATA_PATTERN}}
        CSET_CYCLE_PERIOD = {{CSET_CYCLE_PERIOD}}
        CSET_TIMES_PER_FILE = {{CSET_TIMES_PER_FILE}}
        CSET_FILE_TIME_OFFSET = {{CSET_FILE_TIME_OFFSET}}
        {% endif %}

    [[housekeeping_raw]]
    # Housekeep unprocessed data files.
    script = rose task-run -v --app-key=housekeeping
        [[[environment]]]
        HOUSEKEEPING_MODE = {{[HOUSEKEEPING_MODE, 1]|min}}

    [[housekeeping_full]]
    # Housekeep processed intermediate files too.
    script = rose task-run -v --app-key=housekeeping
        [[[environment]]]
        HOUSEKEEPING_MODE = {{[HOUSEKEEPING_MODE, 2]|min}}

    [[finish_website]]
    # Updates the workflow info in the web interface.
    platform = localhost

    [[send_email]]
    # Send email to notify that the workflow is complete.
    platform = localhost
        [[[environment]]]
        WEB_ADDR = {{WEB_ADDR}}


# Include files bring their own graph and runtime sections.
{% for include_file in glob("includes/*.cylc") %}
{% include include_file %}
{% endfor %}

{# Site-specific details that add to (or override) the core suite definition #}
{% include 'site/' ~ SITE ~ '.cylc' %}
