@article{
    cylc8,
    doi = {10.21105/joss.00737},
    url = {https://doi.org/10.21105/joss.00737},
    year = {2018},
    publisher = {The Open Journal},
    volume = {3},
    number = {27},
    pages = {737},
    author = {Oliver, Hilary J. and Shin, Matthew and Sanders, Oliver},
    title = {Cylc: A Workflow Engine for Cycling Systems},
    journal = {Journal of Open Source Software}
}

@software{metplus,
    author = {Prestopnik, J. and Opatz, J. and Gotway, J.Halley and Jensen, T. and Vigh, J. and Row, M. and Kalb, C. and Fisher, H. and Goodrich, L. and Adriaansen, D. and Win-Gildenmeister, M. and McCabe, G. and Frimel, J. and Blank, L. and Arbetter, T.},
    date = {2025},
    title = {The METplus Version 6.1.0 User’s Guide},
    publisher = {Developmental Testbed Center},
    url = {https://github.com/dtcenter/METplus/releases.},
    language = {en}
}

@software{scitools_iris,
    author = {{Iris contributors}},
    doi = {10.5281/zenodo.595182},
    date = {2025},
    license = {BSD-3-Clause},
    title = {{Iris}},
    url = {https://github.com/SciTools/iris}
}

@article{lfric,
    title = {LFRic: Meeting the challenges of scalability and performance portability in Weather and Climate models},
    journal = {Journal of Parallel and Distributed Computing},
    volume = {132},
    pages = {383-396},
    year = {2019},
    issn = {0743-7315},
    doi = {https://doi.org/10.1016/j.jpdc.2019.02.007},
    url = {https://www.sciencedirect.com/science/article/pii/S0743731518305306},
    author = {S.V. Adams and R.W. Ford and M. Hambley and J.M. Hobson and I. Kavčič and C.M. Maynard and T. Melvin and E.H. Müller and S. Mullerworth and A.R. Porter and M. Rezny and B.J. Shipway and R. Wong},
    keywords = {Separation of concerns, Domain specific language, Exascale, Numerical weather prediction},
    abstract = {This paper describes LFRic: the new weather and climate modelling system being developed by the UK Met Office to replace the existing Unified Model in preparation for exascale computing in the 2020s. LFRic uses the GungHo dynamical core and runs on a semi-structured cubed-sphere mesh. The design of the supporting infrastructure follows object-oriented principles to facilitate modularity and the use of external libraries where possible. In particular, a ‘separation of concerns’ between the science code and parallel code is imposed to promote performance portability. An application called PSyclone, developed at the STFC Hartree centre, can generate the parallel code enabling deployment of a single source science code onto different machine architectures. This paper provides an overview of the scientific requirement, the design of the software infrastructure, and examples of PSyclone usage. Preliminary performance results show strong scaling and an indication that hybrid MPI/OpenMP performs better than pure MPI.}
}
