name: Pull request checks

on:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: python3 -m pip install tox tox-conda
      - uses: actions/cache@v3
        with:
          key: tox|tests|${{ runner.os }}-${{ runner.arch}}|${{ hashFiles('requirements/locks/*') }}
          path: .tox
      - name: Run tests
        run: tox -e py38-linux-tests,py39-linux-tests,py310-linux-tests,py311-linux-tests
      - uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: .coverage
          retention-days: 1

  coverage-report:
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: python3 -m pip install coverage
      - uses: actions/download-artifact@v3
        with:
          name: coverage-data
      - name: Generate coverage report
        run: coverage html
      - uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/
          retention-days: 10
          if-no-files-found: error
      - name: Add report to PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # This will link to a hosted version of the HTML report when I get
          # that sorted.
          report_url="https://www.example.com"

          echo "[![Coverage](https://img.shields.io/badge/coverage-$(coverage json --fail-under=0 -qo - | jq -r .totals.percent_covered_display)%25-blue?style=for-the-badge)](${report_url})
          [Code coverage report](${report_url})" > ${{ runner.temp }}/cov-report.md
          gh pr comment ${{ github.head_ref }} --body-file ${{ runner.temp }}/cov-report.md

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Set up pre-commit
        run: python3 -m pip install pre-commit
      - uses: actions/cache@v3
        with:
          key: pre-commit-3|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
          path: ~/.cache/pre-commit
      - name: Run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: python3 -m pip install tox tox-conda
      - uses: actions/cache@v3
        with:
          key: tox|docs|${{ runner.os }}-${{ runner.arch}}|${{ hashFiles('requirements/locks/*') }}
          path: .tox
      - name: Build documentation
        run: tox -e py310-linux-docs
      - uses: actions/upload-artifact@v3
        with:
          name: html-docs
          path: docs/build/html/
          retention-days: 10
          if-no-files-found: error
