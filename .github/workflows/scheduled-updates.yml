name: "Update conda lock files and pre-commit config"

on:
  schedule:
    - cron: "37 5 * * 1"
  workflow_dispatch:

permissions:
  pull-requests: write
  contents: write

jobs:
  scheduled-updates:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Setup python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install conda-lock pre-commit

      - name: Setup git user and branch
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git switch -c "scheduled-updates-$(date +%s)"

      - name: Update CSET developer and workflow lock files
        run: |
          py_vers="3.11 3.12 3.13"
          for py_ver in ${py_vers}
          do
            # Developer lock files.
            cp "requirements/environment.yml" "${{ runner.temp }}/${py_ver}_dev_environment.yml"
            echo -e "\n  - python = $py_ver" >> "${{ runner.temp }}/${py_ver}_dev_environment.yml"
            conda-lock --channel conda-forge --kind explicit --file "${{ runner.temp }}/${py_ver}_dev_environment.yml" --platform linux-64 --filename-template "requirements/locks/py$(echo $py_ver | sed 's/\.//')-lock-linux-64.txt"
          done

          # Sort lock files to make diffs easier to review.
          for file in requirements/locks/*.txt
          do
            # Leave the file header unsorted.
            cat "$file" | (sed -u 4q; sort) > sorted.txt
            mv sorted.txt "$file"
          done

      - name: Update pre-commit config
        run: pre-commit autoupdate --freeze

      - name: Generate GitHub App Token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42
        id: app-token
        with:
          app-id: ${{ secrets.AUTH_APP_ID }}
          private-key: ${{ secrets.AUTH_APP_PRIVATE_KEY }}

      - name: Commit changes and create pull requests
        env:
          source_ref: ${{ github.ref }}
          source_ref_type: ${{ github.ref_type }}
          gh_token: ${{ steps.app-token.outputs.token }}
          repository: ${{ github.repository }}
        run: |
          # Display any changes in the log and exit early if there are none.
          if git diff --name-status --exit-code
          then
            echo "No change, skipping pull request..."
            exit 0
          fi

          # Commit changed lockfiles.
          git add requirements/locks/*.txt
          git commit -m "[CI] Update conda lock files" || true

          # Commit changed pre-commit config.
          git add .pre-commit-config.yaml
          git commit -m "[CI] Update .pre-commit-config.yaml" || true

          # Push branch to GitHub.
          git push origin HEAD

          # If running from a branch target the created PR at that branch.
          if [[ ${source_ref_type} = branch ]]
          then
            base_branch_name="${source_ref}"
          else
            base_branch_name="main"
          fi

          # Create PR on GitHub using GitHub REST API.
          request_body='{"title":"[CI] Scheduled updates","body":"Created automatically by GitHub Actions.","base":"'"${base_branch_name}"'","head":"'"$(git branch --show-current)"'"}'
          printf "Pull request:"
          curl -LsS --fail-with-body \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${gh_token}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${repository}/pulls \
            -d "${request_body}" | jq .html_url
