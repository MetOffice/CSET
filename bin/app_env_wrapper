#! /bin/bash

# This is simple wrapper script for apps in this suite,
# designed to set up the appropriate Python environment.
#
# Usage: app_env_wrapper CMD [cmd_opts]

set -euo pipefail

# Check that environment is sourced in at least one way
if [[ "$CSET_ENV_USE_MODULES" == False ]] && [[ "$CSET_ENV_USE_CONDA" == False ]]
then
  echo '[ERROR] At least one way of specifying environment needed'
  exit 1
fi

# Load modules
if [[ $CSET_ENV_USE_MODULES == True ]]
then
  IFS_SAVE=$IFS
  IFS=' '
  if [[ "$MODULES_PURGE" ]]; then
    module purge
  fi
  for module in $MODULES_LIST; do
    module load "$module"
  done
  IFS="$IFS_SAVE"
  module list
fi

# Activate conda environment
if [[ "$CSET_ENV_USE_CONDA" == True ]]
then
  # Ensure CONDA_PATH is defined.
  if [[ -d "$CONDA_PATH" ]]; then
    echo "Sourcing conda on path: ${CONDA_PATH}"
  else
    CONDA_PATH=""
  fi
  # Use default location if CONDA_VENV_LOCATION is not specified.
  if [[ -z "$CONDA_VENV_LOCATION" ]]; then
    CONDA_VENV_LOCATION="${CYLC_WORKFLOW_SHARE_DIR}/cset_conda_env"
  fi
  echo "Using conda environment $CONDA_VENV_LOCATION"
  source "$("${CONDA_PATH}conda" info --base)/etc/profile.d/conda.sh"
  set +u
  "${CONDA_PATH}conda" activate "$CONDA_VENV_LOCATION"
  set -u
  export LD_LIBRARY_PATH="${CONDA_PREFIX}/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
fi

# Add separately maintained METplus to PATH.
if [[ "$CSET_ENV_SEPARATE_MET" == True ]]
then
  echo "Using separate installation of METplus."
  export LD_LIBRARY_PATH="${MET_LIBRARIES}/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
  export PATH="${METPLUS_BASE}/ush:${MET_BUILD_BASE}/bin:${PATH}"
fi

exec "$@"
